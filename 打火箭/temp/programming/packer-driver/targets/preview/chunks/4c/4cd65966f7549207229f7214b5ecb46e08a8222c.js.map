{"version":3,"sources":["file:///Users/zhangxinxin/XXWorkSpace/Github%E9%A1%B9%E7%9B%AE/Cocos%20%E9%A1%B9%E7%9B%AE/CocosLearnDemo/%E6%89%93%E7%81%AB%E7%AE%AD/assets/scripts/GameRoot.ts"],"names":["_decorator","Component","Node","input","Input","KeyCode","Prefab","instantiate","Collider2D","Contact2DType","director","Director","ccclass","property","GameRoot","playerPosIndex","hensPosXArr","ufoPosXArr","start","initData","openInputEvent","startCreateEggs","openColloder2DEvent","update","deltaTime","i","eggsRoot","children","length","element","x","position","y","setPosition","window","innerHeight","destroy","ufoHitRoot","innerWidth","hensRoot","targetX","targetY","player","schedule","egg","eggPrefab","addChild","Math","floor","random","randomPrefab","ufoSingleHit","ufoDoubleHit","spacingBetweenDefaultPrefabs","spacingBetweenDoubleHitPrefab","ufo","spacingBetweenPrefabs","comp","getComponent","on","BEGIN_CONTACT","selfCollider","otherCollider","contact","console","log","once","EVENT_AFTER_PHYSICS","node","EventType","KEY_DOWN","onKeyDown","event","keyCode","KEY_A","movePlayer","KEY_D","dir"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventKeyboard, Node, input, Input, KeyCode, Prefab, instantiate, Collider2D, Contact2DType, IPhysics2DContact, director, Director} from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameRoot')\nexport class GameRoot extends Component {\n    @property(Node) player: Node = null!;\n    @property(Node) hensRoot: Node = null!;\n    @property(Node) eggsRoot: Node = null!;\n    @property(Prefab) eggPrefab: Prefab = null!;\n    @property(Node) ufoHitRoot: Node = null!;\n    @property(Prefab) ufoSingleHit: Prefab = null!;\n    @property(Prefab) ufoDoubleHit: Prefab = null!;\n\n\n    playerPosIndex = 0;\n    hensPosXArr = []\n    ufoPosXArr = []\n\n    start() {\n        this.initData();\n        this.openInputEvent();\n        this.startCreateEggs();\n        this.openColloder2DEvent();\n    }\n\n    update(deltaTime: number) {\n        for (let i = 0; i < this.eggsRoot.children.length; i++) {\n            const element = this.eggsRoot.children[i];\n            const x = element.position.x;\n            // 下落速度\n            const y = element.position.y - 150 * deltaTime;\n            element.setPosition(x, y, 0);\n            if (y < -window.innerHeight) {\n                element.destroy();\n            }\n        }\n\n        for (let i = 0; i < this.ufoHitRoot.children.length; i++) {\n            const element = this.ufoHitRoot.children[i];\n            const x = element.position.x - 150 * deltaTime;;\n            const y = element.position.y; \n            element.setPosition(x, y, 0);\n            if (x < -window.innerWidth/2) {\n                element.destroy();\n            }\n        }\n\n    }\n\n    // Init Data\n    initData() {\n        // hens每个子元素的X坐标\n        for (let i = 0; i < this.hensRoot.children.length; i++) {\n            const element = this.hensRoot.children[i];\n            // hens每个子元素的X坐标就是player的移动范围\n            this.hensPosXArr[i] = element.position.x - 30;\n        }\n        // player初始位置\n        const targetX = this.hensPosXArr[0];\n        const targetY = this.player.position.y;\n        this.player.setPosition(targetX, targetY, 0);\n    }\n\n    // Init Prefab\n    startCreateEggs() {\n        this.schedule(() => {\n            // 生产egg\n            const egg = instantiate(this.eggPrefab);\n            this.eggsRoot.addChild(egg);\n            // 配置egg的位置\n            const targetX = this.hensPosXArr[Math.floor(Math.random() * this.hensPosXArr.length)];\n            const targetY = this.hensRoot.position.y - 80 \n            egg.setPosition(targetX, targetY, 0);\n        }, 1);\n\n        // 生产Car\n        this.schedule(() => {\n            const randomPrefab = Math.random() < 0.5 ? this.ufoSingleHit : this.ufoDoubleHit;\n            let targetX = 0;\n            const targetY = 0;\n            const spacingBetweenDefaultPrefabs = 10;\n            const spacingBetweenDoubleHitPrefab = 20;\n        \n            const ufo = instantiate(randomPrefab);\n            this.ufoHitRoot.addChild(ufo);\n            ufo.setPosition(targetX, targetY, 0);\n        \n            // 根据预制体类型设置间距\n            const spacingBetweenPrefabs = randomPrefab === this.ufoDoubleHit ? spacingBetweenDoubleHitPrefab : spacingBetweenDefaultPrefabs;\n        \n            // 调整下一个预制体的位置\n            targetX += spacingBetweenPrefabs;\n        }, 1);\n    }\n\n    // Init big bang\n    openColloder2DEvent() {\n        const comp = this.player.getComponent(Collider2D);\n        comp?.on(Contact2DType.BEGIN_CONTACT, (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) => {\n            console.log('碰撞开始');\n            director.once(Director.EVENT_AFTER_PHYSICS, () => {\n                otherCollider.node.destroy();\n            }, this);\n        }, this)\n    }\n\n    // Event Handlers\n    openInputEvent() {\n        input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\n    }\n    onKeyDown(event: EventKeyboard) {\n        switch (event.keyCode) {\n            case KeyCode.KEY_A:\n                this.movePlayer(-1);\n                break;\n            case KeyCode.KEY_D:\n                this.movePlayer(1);\n                break;\n            default:\n                break;\n        }\n    }\n    movePlayer(dir: 1 | -1) {\n        this.playerPosIndex += dir;\n        if (this.playerPosIndex < 0) {\n            this.playerPosIndex = 0 \n        }\n        if (this.playerPosIndex > this.hensPosXArr.length - 1) {\n            this.playerPosIndex = this.hensPosXArr.length - 1\n        }\n        const targetX = this.hensPosXArr[this.playerPosIndex];\n        const targetY = this.player.position.y;\n        this.player.setPosition(targetX, targetY, 0);\n    }\n      \n}\n\n"]}