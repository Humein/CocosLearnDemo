{"version":3,"sources":["file:///Users/zhangxinxin/XXWorkSpace/Github%E9%A1%B9%E7%9B%AE/Cocos%20%E9%A1%B9%E7%9B%AE/CocosLearnDemo/%E6%89%93%E7%81%AB%E7%AE%AD/assets/scripts/GameRoot.ts"],"names":["_decorator","Component","Node","input","Input","KeyCode","Prefab","instantiate","Collider2D","Contact2DType","director","Director","tween","Label","Vec3","Color","PhysicsSystem2D","ccclass","property","PHY_GROUP","PHY_TAG","GameRoot","isJumping","playerPosIndex","hensPosXArr","ufoPosXArr","playScore","playHp","start","initData","openInputEvent","startCreateEggs","openColloder2DEvent","update","deltaTime","i","eggsRoot","children","length","element","x","position","y","setPosition","window","innerHeight","destroy","ufoHitRoot","innerWidth","onLoad","on","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","hensRoot","targetX","targetY","player","color","to","z","onUpdate","target","ratio","scoreLabel","union","repeatForever","updateScore","schedule","egg","eggPrefab","eggsRootCollider","getComponent","group","DEFAULT","tag","TAG_EGG","addChild","Math","floor","random","randomPrefab","ufoSingleHit","ufoDoubleHit","ufo","ufoCollider","BULLET_PROP","TAG_CAR","TAG_DOUBLECAR","playerCollider","comp","BEGIN_CONTACT","selfCollider","otherCollider","contact","console","log","otherCTag","updateScoreLabel","once","EVENT_AFTER_PHYSICS","node","onBeginContact","playJumpAndRollEffect","instance","END_CONTACT","onEndContact","PRE_SOLVE","onPreSolve","POST_SOLVE","onPostSolve","event","keyCode","KEY_A","movePlayer","isAPressed","KEY_D","isDPressed","KEY_W","jumpUPAnimation","isWPressed","jumpDownAnimation","dir","makeMoveStepIndex","setScale","obj","n","easing","repeat","jumpX","jumpHeight","jumpDuration","screenWidth","originalPosition","jumpPosition","call","playFallEffect","fallDuration","fallPosition","string"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventKeyboard, Node, input, Input, KeyCode,\n     Prefab, instantiate, Collider2D, Contact2DType, IPhysics2DContact, \n     director, Director, tween, Label, Vec3, Color, PhysicsSystem2D} from 'cc';\nconst { ccclass, property } = _decorator;\n\n/// 分组 枚举\nenum PHY_GROUP {\n    DEFAULT = 1 << 0,\n    SELF_PLANE = 1 << 1,\n    ENEMY_PLANE = 1 << 2,\n    SELF_BULLET = 1 << 3,\n    ENEMY_BULLET = 1 << 4,\n    BULLET_PROP = 1 << 5,\n};\n\n/// TAG 枚举\nenum PHY_TAG {\n    TAG_PLAYER = 1,\n    TAG_EGG = 2,\n    TAG_CAR = 3,\n    TAG_DOUBLECAR = 4,\n};\n\n@ccclass('GameRoot')\nexport class GameRoot extends Component {\n\n\n\n    @property(Node) player: Node = null!;\n    @property(Node) hensRoot: Node = null!;\n    @property(Node) eggsRoot: Node = null!;\n    @property(Prefab) eggPrefab: Prefab = null!;\n    @property(Node) ufoHitRoot: Node = null!;\n    @property(Prefab) ufoSingleHit: Prefab = null!;\n    @property(Prefab) ufoDoubleHit: Prefab = null!;\n    @property(Label) scoreLabel: Label = null!;\n\n    // 在组件的属性中声明按键状态\n    @property\n    private isDPressed: boolean = false;\n    @property\n    private isWPressed: boolean = false;\n    @property\n    private isAPressed: boolean = false;\n    private isJumping = false; // 标记是否正在跳跃\n\n    playerPosIndex = 0;\n    hensPosXArr = []\n    ufoPosXArr = []\n     \n    playScore = 0\n    playHp = 3\n\n    // LIFE-CYCLE CALLBACKS:\n    start() {\n        this.initData();\n        this.openInputEvent();\n        this.startCreateEggs();\n        this.openColloder2DEvent();\n    }\n\n    update(deltaTime: number) {\n        for (let i = 0; i < this.eggsRoot.children.length; i++) {\n            const element = this.eggsRoot.children[i];\n            const x = element.position.x;\n            // 下落速度\n            const y = element.position.y - 150 * deltaTime;\n            element.setPosition(x, y, 0);\n            if (y < -window.innerHeight) {\n                element.destroy();\n            }\n        }\n\n        for (let i = 0; i < this.ufoHitRoot.children.length; i++) {\n            const element = this.ufoHitRoot.children[i];\n            const x = element.position.x - 150 * deltaTime;;\n            const y = element.position.y; \n            element.setPosition(x, y, 0);\n            if (x < -window.innerWidth) {\n                element.destroy();\n            }\n        }\n\n    }\n    \n    onLoad() {\n        director.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\n        director.on(Input.EventType.KEY_UP, this.onKeyUp, this);\n    }\n\n    onDestroy() {\n        director.off(Input.EventType.KEY_DOWN, this.onKeyDown, this);\n        director.off(Input.EventType.KEY_UP, this.onKeyUp, this);\n    }\n\n    // Init Data\n    initData() {\n        // hens每个子元素的X坐标\n        for (let i = 0; i < this.hensRoot.children.length; i++) {\n            const element = this.hensRoot.children[i];\n            // hens每个子元素的X坐标就是player的移动范围\n            this.hensPosXArr[i] = element.position.x - 30;\n        }\n        // player初始位置\n        const targetX = this.hensPosXArr[0];\n        const targetY = -window.innerHeight/2 + 100;\n        this.player.setPosition(targetX, targetY, 0);\n        // 初始化分数\n        const color = new Vec3(255, 255, 255);\n        tween(color)\n        .to(2, {x: 10, y: 150, z: 0}, {\n            onUpdate: (target, ratio) => {\n                this.scoreLabel.color = new Color(color.x, color.y, color.z);\n            }\n        })\n        .to(2, {x: 120, y: 0, z: 100}, {\n            onUpdate: (target, ratio) => {\n                this.scoreLabel.color = new Color(color.x, color.y, color.z);\n            }\n        })\n        .union()\n        .repeatForever()\n        .start();\n        this.updateScore();\n    }\n\n    // Init Prefab\n    startCreateEggs() {\n        this.schedule(() => {\n            // 生产egg\n            const egg = instantiate(this.eggPrefab);\n            // 为预制体设置碰撞组\n            const eggsRootCollider = egg.getComponent(Collider2D);\n            eggsRootCollider.group = PHY_GROUP.DEFAULT\n            eggsRootCollider.tag = PHY_TAG.TAG_EGG \n            this.eggsRoot.addChild(egg);\n            // 配置egg的位置\n            const targetX = this.hensPosXArr[Math.floor(Math.random() * this.hensPosXArr.length)];\n            const targetY = this.hensRoot.position.y - 80 \n            egg.setPosition(targetX, targetY, 0);\n        }, 1);\n\n        // 生产Car\n        this.schedule(() => {\n            const randomPrefab = Math.random() < 0.5 ? this.ufoSingleHit : this.ufoDoubleHit;\n            const targetX = 0;\n            const targetY = 100; // 相对于初始UFO节点的Y坐标\n            const ufo = instantiate(randomPrefab);\n             // 为不同种类的预制体设置碰撞组\n            const ufoCollider = ufo.getComponent(Collider2D);\n            if (randomPrefab === this.ufoSingleHit) {\n                // 这里的单个CAR 就不会和 player 碰撞了\n                ufoCollider.group = PHY_GROUP.BULLET_PROP\n                ufoCollider.tag = PHY_TAG.TAG_CAR\n            }else{\n                ufoCollider.group = PHY_GROUP.DEFAULT\n                ufoCollider.tag = PHY_TAG.TAG_DOUBLECAR  \n            }\n            this.ufoHitRoot.addChild(ufo);\n            // XXTODO 预制体之间间距默认是80，但是 ufoDoubleHit与其他预制体包括它自己的间距是:120\n            ufo.setPosition(targetX, targetY, 0);\n        }, 3);\n        \n    }\n        \n\n    // Init big bang\n    openColloder2DEvent() {\n        // 设置分组\n        // 获取 this.player 上的碰撞组件\n        const playerCollider = this.player.getComponent(Collider2D);\n        playerCollider.group = PHY_GROUP.DEFAULT\n        // 处理碰撞逻辑\n        const comp = this.player.getComponent(Collider2D);\n        comp?.on(Contact2DType.BEGIN_CONTACT, (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) => {\n            console.log('碰撞开始');\n            // 获取碰撞对象的Tag\n            const otherCTag = otherCollider.tag;\n            // 根据标签区分碰撞对象\n            switch (otherCTag) {\n                case PHY_TAG.TAG_EGG:\n                    console.log('player 碰到了 TAG_EGG');\n                    // 执行 Eggs 相关的处理逻辑\n                    this.updateScoreLabel(); \n                    // 在下一帧的物理模拟之后销毁物体\n                    director.once(Director.EVENT_AFTER_PHYSICS, () => {\n                       otherCollider.node.destroy();\n                    }, this);\n                    break;\n                case PHY_TAG.TAG_DOUBLECAR:\n                    console.log('player 碰到了 TAG_DOUBLECAR');\n                    // 执行 UfoHit 相关的处理逻辑\n                    // 执行向左跳起并翻滚的效果\n                    selfCollider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n                    if (!this.isJumping) {\n                        this.playJumpAndRollEffect(selfCollider);\n                    }\n                    break;\n                default:\n                    // 处理其他标签或未知标签\n                    break;\n            }\n        }, this)\n        // 注册全局碰撞回调函数\n        if (PhysicsSystem2D.instance) {\n            PhysicsSystem2D.instance.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n            PhysicsSystem2D.instance.on(Contact2DType.END_CONTACT, this.onEndContact, this);\n            PhysicsSystem2D.instance.on(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\n            PhysicsSystem2D.instance.on(Contact2DType.POST_SOLVE, this.onPostSolve, this);\n        }\n    }\n    onBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\n        // 只在两个碰撞体开始接触时被调用一次\n        console.log('onBeginContact');\n    }\n    onEndContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\n        // 只在两个碰撞体结束接触时被调用一次\n        console.log('onEndContact');\n    }\n    onPreSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\n        // 每次将要处理碰撞体接触逻辑时被调用\n        console.log('onPreSolve');\n    }\n    onPostSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\n        // 每次处理完碰撞体接触逻辑时被调用\n        console.log('onPostSolve');\n    }\n\n    // Event bigBang \n    updateScoreLabel() {\n        this.playScore += 1;\n        this.updateScore();\n    }\n\n\n    // Event input Handlers\n    openInputEvent() {\n        input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\n        input.on(Input.EventType.KEY_UP, this.onKeyUp, this);\n    }\n    onKeyDown(event: EventKeyboard) {\n        switch (event.keyCode) {\n            case KeyCode.KEY_A:\n                this.movePlayer(-1);\n                this.isAPressed = true;\n                break;\n            case KeyCode.KEY_D:\n                this.movePlayer(1);\n                this.isDPressed = true;\n                break;\n            case KeyCode.KEY_W:\n                this.jumpUPAnimation();\n                this.isWPressed = true;\n                break;\n            default:\n                break;\n        }\n        // 同时按下了 KEY_D 和 KEY_W\n        if (this.isDPressed && this.isWPressed) {\n           this.jumpUPAnimation();\n        }\n        if (this.isAPressed && this.isWPressed) {\n            this.jumpUPAnimation();\n        }\n    }\n\n    onKeyUp(event: EventKeyboard) {\n        if (this.isDPressed && this.isWPressed) {\n            this.jumpDownAnimation(1);\n         }\n         if (this.isAPressed && this.isWPressed) {\n             this.jumpDownAnimation(-1);\n         }\n        switch (event.keyCode) {\n            case KeyCode.KEY_A:\n                this.isAPressed = false;\n                break;\n            case KeyCode.KEY_D:\n                this.isDPressed = false;\n                break;\n            case KeyCode.KEY_W:\n                this.isWPressed = false;\n                break;\n            default:\n                break;\n        }\n    }\n   \n    // Event Handlers\n    movePlayer(dir: 1 | -1) {\n        if (this.isDPressed && this.isWPressed) {\n            return;\n         }\n         if (this.isAPressed && this.isWPressed) {\n            return;\n         }\n        this.makeMoveStepIndex(dir);\n        const targetX = this.hensPosXArr[this.playerPosIndex];\n        const targetY = this.player.position.y;\n        this.player.setPosition(targetX, targetY, 0);\n    }\n\n    makeMoveStepIndex(dir: 1 | -1){\n        this.playerPosIndex += dir;\n        if (this.playerPosIndex < 0) {\n            this.playerPosIndex = 0 \n        }\n        if (this.playerPosIndex > this.hensPosXArr.length - 1) {\n            this.playerPosIndex = this.hensPosXArr.length - 1\n        }\n        console.log('this.playerPosIndex', this.playerPosIndex);\n    }\n\n    // Animation\n    jumpUPAnimation() {\n        this.player.setScale(1.2, 1.2, 1.2);\n        const y = -window.innerHeight/2 + 100;\n        const obj = {\n            n: y\n        }   \n        tween(obj)\n            .to(0.5, {n: 20}, {\n                onUpdate: (target, ratio) => {\n                    this.player.setPosition(this.player.position.x, obj.n);\n                },\n                easing: 'quadOut' // 缓动曲线为弹性曲线\n            })\n            .to(0.5, {n: y}, {\n                onUpdate: (target, ratio) => {\n                    this.player.setPosition(this.player.position.x, obj.n); \n                },\n                easing: 'quadIn'\n            })\n            .union()\n            .repeat(1)\n            .start();\n    }\n\n    jumpDownAnimation(dir: 1 | -1) {\n        this.makeMoveStepIndex(dir);\n        const jumpX = dir === 1 ? 80 : -80;\n        this.player.setScale(1, 1, 1);\n        const obj = {\n            n: this.player.position.x\n        }\n        tween(obj)\n        .to(.5, {n: this.player.position.x + jumpX}, {\n            onUpdate: (target, ratio) => {\n                this.player.setPosition(obj.n, this.player.position.y);\n            }\n        })\n        .start();\n    }\n\n    playJumpAndRollEffect(selfCollider: Collider2D) {\n        const jumpHeight = 100; // 跳跃高度\n        const jumpDuration = 0.5; // 跳跃持续时间\n        const screenWidth = window.innerWidth; // 屏幕宽度，根据你的游戏设置\n    \n        // 标记为跳跃状态\n        this.isJumping = true;\n    \n        const originalPosition = selfCollider.node.position;\n        const jumpPosition = new Vec3(originalPosition.x - 100, originalPosition.y + jumpHeight, originalPosition.z);\n    \n        // 检查目标位置是否超出屏幕范围\n        if (jumpPosition.x <  -window.innerWidth/2) {\n            // 如果跳跃会超出左边屏幕边界，将目标位置调整到屏幕边界\n            jumpPosition.x = 0;\n            console.log(\"超出左边屏幕边界 jumpPosition.x\", jumpPosition.x)\n        } else if (jumpPosition.x > screenWidth) {\n            // 如果跳跃会超出右边屏幕边界，将目标位置调整到屏幕边界\n            jumpPosition.x = screenWidth;\n            console.log(\"超出右边屏幕边界 jumpPosition.x\", jumpPosition.x)\n        }\n    \n        // 使用 Tween 实现向左跳起的效果\n        tween(selfCollider.node)\n            .to(jumpDuration / 2, { position: jumpPosition }, { easing: 'quadOut' })\n            .to(jumpDuration / 2, { position: originalPosition }, { easing: 'quadIn' })\n            .call(() => {\n                // 动画完成后的回调，可以在这里执行其他逻辑\n                // 标记跳跃状态结束\n                this.isJumping = false;\n                this.playFallEffect(selfCollider)\n            })\n            .start();\n    }\n    \n\n    playFallEffect(selfCollider: Collider2D) {\n        const fallDuration = 0.1; // 下落持续时间\n    \n        const originalPosition = selfCollider.node.position;\n        const fallPosition = new Vec3(originalPosition.x, originalPosition.y - 100, originalPosition.z);\n    \n        // 使用 Tween 实现下落的效果\n        tween(selfCollider.node)\n            .to(fallDuration, { position: fallPosition }, { easing: 'quadIn' })\n            .call(() => {\n                // 下落动画完成后的回调，可以在这里执行其他逻辑\n            })\n            .start();\n    }\n\n    // Private Method\n    private updateScore() {\n        this.scoreLabel.string = `${this.playScore} 分`\n    }\n      \n}\n\n"]}